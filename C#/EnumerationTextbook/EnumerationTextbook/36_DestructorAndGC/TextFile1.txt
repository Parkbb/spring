소멸자(Destructor)

생성자와 반대 개념으로 클래스로부터 인스턴스화된 개체가 메모리 상에서 없어질 때 발생하는 메서드
C#에서는 .NET Framwork의 GC가 개체 소멸시 메모리 해제 ㄷ증의 역할을 대신해 주기 때문에 소멸자를 직접 접근할 일은 없음
자동차 시동 끄는 기능으로 비유가 가능하며 운전수가 주차하고 시동 끄는 행위를 진행하는게 아닌 주차요원이 이 모든 것을 대신 해주는것과 의미가 같음

using 구문을 사용한 개체 소멸시기 결정
형식
using(Resource r1 = enw Resource())
{
	r1.Method();
}

가비지 수집기(Garbage Collector)

자동차(Car) 개체와 관련하여
	-소멸자: 좋은 호텔 앞에서의 주차 요원 역할
		-왜?
			-키를 받고 알아서 시동을 꺼주니까?

개체의 라이프 사이클(The Object Life Cycle)

값형과 참조형의 할당된 자원 관리 비교

개체의 라이프 사이클(Object Life Cycle)
-메모리 할당
	-new 키워드
-개체 초기화
	-생성자에 의한 개체 생성/초기화
-개체 사용
	-속성, 메서드 및 기타 멤버 사용
-개체 소멸
	-소멸자에 의한 개체 정리
-메모리 반환

값형과 참조형 메모리 자원 관리 비교
값형
	-Stack에 저장됨
		-LIFO
	-해당 범위를 벗어나면 자동으로 소멸
	-메모리 단편화가 없음
참조형
	-Heap에 저장됨
		-FIFO
	-동일 개체를 여러 번 참조 가능
	-하나라도 참조하고 있으면 소멸되지 않음
		-메모리 단편화의 원인이 될 수 있음
	-가비지 컬렉터에 의해 관리됨